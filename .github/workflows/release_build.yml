name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up .NET Core SDK
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x' # Use the version you need

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore

    # Build the application
    - name: Build the application
      run: dotnet build --configuration Release

    # Publish the application (for a web app or console app, adjust accordingly)
    - name: Publish the application
      run: dotnet publish -c Release -o ./publish

    # Compress the published output
    - name: Zip the build
      run: zip -r ./build.zip ./publish

    # Upload the zipped build as an artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: ./build.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: build

    # Create or update GitHub release
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: "Release ${{ github.ref_name }}"
        draft: false
        prerelease: false

    # Upload the zipped build to the release
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build.zip
        asset_name: build.zip
        asset_content_type: application/zip
